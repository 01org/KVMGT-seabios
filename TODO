Clean up timer code.  Don't use PORT_DIAG as delay mechanism.

Disable a20 on jump to 16bit mode.

Do a pci scan for ide controllers - don't just assume ISA ports are
available.

The keyboard driver should detect ctrl+alt+del and reboot the
machine.

Fix keyboard LEDs.

Review changes committed to coreboot, virtualbox, qemu, kvm, and bochs
cvs tip.
  * bochs cvs (1.209)         -- all changes synched
  * coreboot (r3348): 1.163   -- no noteworthy enhancements
  * qemu (r4675): 1.207       -- supports >4Gig memory
  * kvm (45a442c): 1.182      -- >4gig, e820 vmx pages, enable cache?,
    wrmsr in smp_start and rombios32, acpi insrcovr table
  * virtualbox (r9404): 1.176 -- f11/f12 kbd, lots of mouse changes,
    logo, set text mode?, int 1589, floppy data rate?,
    dummy_isr_function, int19 calls post

Look into ways to reduce stack usage.  Alter ISRs so that they do not
enable irqs.  Only call out to other bios functions after minimizing
stack usage.

Audit all sti/cli calls.  Audit all call16 calls to make sure flags is
setup properly with respect to irqs.

Audit statements where a 32bit intermediary changes meaning of a 16bit
comparison.

Code assumes ebda segment is static - it doesn't read 0x40e.

The __call16 code does a long jump to the interrupt trampolines - this
is unnecessary.

Cleanup setting of ES on GET/SET_BDA

Audit code for 16bit protected mode accesses.

Support 1ab1 from 16bit protected mode.

Verify option roms wont stomp on seabios stack and bss.

Possibly implement 32bit pcibios support.

Allow one to select adding 32 bit code to 0xf000 or in a separate
location.

See if it is possible to handle interrupts while in 32bit mode.

Look at integrating the lgpl vgabios into tree.

Look at usb booting specs.  Look at possibly supporting usb
keyboard/mice.

Add a graphical boot splash screen?
